"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from typing import NamedTuple

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY", "abc123")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    # Local
    "sites.apps.SitesConfig",
    "users.apps.UsersConfig",
    "quizzes.apps.QuizzesConfig",
    "problems.apps.ProblemsConfig",
    "announcements.apps.AnnouncementsConfig",
    "configurations.apps.ConfigurationsConfig",
    # 3rd party
    "sass_processor",
    "storages",
    # Django
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # all auth
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    # pgrit login
    "pgrit",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "app.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("DB_NAME", "postgres"),
        "USER": os.getenv("DB_USER", "pg"),
        "PASSWORD": os.getenv("DB_PASSWORD", "password"),
        "HOST": os.getenv("DB_HOST", "db"),
        "PORT": os.getenv("DB_PORT", 5432),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "ja"

TIME_ZONE = "Asia/Tokyo"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = ()
STATIC_ROOT = "/code/static/"

STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "sass_processor.finders.CssFinder",
]

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
AUTH_USER_MODEL = "users.User"

SASS_PROCESSOR_ROOT = os.path.join(BASE_DIR, "static")
SASS_PROCESSOR_INCLUDE_FILE_PATTERN = r"^.+\.(sass|scss)$"
SASS_PRECISION = 8
SASS_OUTPUT_STYLE = "compressed"
SASS_TEMPLATE_EXTS = [".html", ".haml"]

DEFAULT_AUTO_FIELD = "django.db.models.AutoField"

LOGIN_URL = "/signin/"
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/signin/"

# login with PGrit

SITE_ID = 1
SOCIALACCOUNT_PROVIDERS = {
    "PGrit": {
        "APP": {"client_id": os.getenv("CLIENT_ID", "clientid"), "secret": os.getenv("CLIENT_SECRET", "secret")},
    }
}

AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
)
ACCOUNT_AUTHENTICATION_METHOD = "email"
ACCOUNT_USERNAME_REQUIRED = False

ACCOUNT_EMAIL_VERIFICATION = "none"
ACCOUNT_EMAIL_REQUIRED = True

USE_X_FORWARDED_HOST = True

DISCORD_WEBHOOK_SYSTEM_NOTIFY_URL = os.getenv("DISCORD_WEBHOOK_SYSTEM_NOTIFY_URL", "")
DISCORD_WEBHOOK_SOLVED_NOTIFY_URL = os.getenv("DISCORD_WEBHOOK_SOLVED_NOTIFY_URL", "")
DISCORD_WEBHOOK_ERROR_NOTIFY_URL = os.getenv("DISCORD_WEBHOOK_ERROR_NOTIFY_URL", "")

AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.getenv("AWS_SECRET_ACCESS_KEY")
AWS_STORAGE_BUCKET_NAME = os.getenv("AWS_STORAGE_BUCKET_NAME")
AWS_S3_ENDPOINT_URL = os.getenv("AWS_S3_ENDPOINT_URL")
AWS_S3_REGION_NAME = os.getenv("AWS_S3_REGION_NAME", "ap-northeast-1")

DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"


class GameConfiguration(NamedTuple):
    field: str
    value: str = "0"
    description: str = ""


DEFAULT_GAME_CONFIGURATIONS = [
    GameConfiguration("game", "0", "(bool) 開催中: 1, 停止中: 0"),
    GameConfiguration("game_paused", "0", "(bool) ゲームが一時停止中: 1, 一時停止中でない: 0"),
    GameConfiguration("start_ts", "0", "(timestamp) ゲーム開始時刻"),
    GameConfiguration("end_ts", "0", "(timestamp) ゲーム終了時刻"),
    GameConfiguration("auto_announce", "1", "(bool) 問題公開アナウンスを自動作成するか"),
    GameConfiguration("scoring", "1", "(bool) プレイヤーのスコアを加算するか"),
    GameConfiguration("update_score", "1", "(bool) 回答者の割合によって問題のスコアを更新するか"),
    GameConfiguration("min_score", "50", "(int) 問題のスコアの最小値"),
    GameConfiguration("max_score", "500", "(int) 問題のスコアの最大値"),
    GameConfiguration("winners_threshould", "10", "(int) 超えるとスコアが最小になる正解者数"),
    GameConfiguration("default_bonus", "0", "(int) 問題のスコアのボーナス値"),
    GameConfiguration("default_penalty", "0", "(int) 問題のスコアのペナルティ値"),
    GameConfiguration("ranking", "1", "(bool) ランキングを更新するか"),
    GameConfiguration("open_ranking", "1", "(bool) ランキングを公開するか"),
    GameConfiguration("ranking_limit", "10", "(int) ランキングの表示上限"),
    GameConfiguration("ragistration", "1", "(bool) プレイヤー登録を許可するか"),
    GameConfiguration("login", "1", "(bool) プレイヤーのログインを許可するか"),
]
